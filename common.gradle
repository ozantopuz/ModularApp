apply plugin: Plugins.KOTLIN_ANDROID
apply plugin: Plugins.KOTLIN_ANDROID_EXTENSIONS
apply plugin: Plugins.KOTLIN_KAPT
apply plugin: Plugins.DAGGER_HILT

android {
    compileSdkVersion Config.COMPILE_SDK_VERSION

    defaultConfig {
        minSdkVersion Config.MIN_SDK_VERSION
        targetSdkVersion Config.TARGET_SDK_VERSION
        versionCode Config.VERSION_CODE
        versionName Config.VERSION_NAME
    }

    flavorDimensions Dimensions.DEFAULT
    productFlavors {
        prod {
            versionCode Prod.VERSION_CODE
            versionName Prod.VERSION_NAME
        }

        dev {
            versionCode Dev.VERSION_CODE
            versionName Dev.VERSION_NAME
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            debuggable true
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    lintOptions {
        lintOptions {
            abortOnError false
            warningsAsErrors true
            ignoreTestSources true
            lintConfig file("lint.xml")
            disable 'GradleDeprecated'
            disable 'OldTargetApi'
            disable 'GradleDependency'
        }
    }

    buildFeatures {
        viewBinding true
    }

    packagingOptions {
        exclude 'META-INF/*'
    }
}

dependencies {
    api Libraries.DAGGER_HILT
    kapt Libraries.DAGGER_HILT_COMPILER
    compileOnly Libraries.JAVAX_ANNOTATION

    testImplementation TestLibraries.J_UNIT
    androidTestImplementation TestLibraries.ANDROID_TEST_IMPLEMENTATION
    androidTestImplementation TestLibraries.ESPRESSO_CORE
    api TestLibraries.COROUTINES_TEST
    testImplementation TestLibraries.MOCKK
    testImplementation TestLibraries.TRUTH
    testImplementation TestLibraries.ARCH_CORE
    androidTestImplementation TestLibraries.TRUTH
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'org.jetbrains.kotlin') {
            details.useVersion Versions.KOTLIN_VERSION
        }
    }
}